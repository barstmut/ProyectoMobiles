// Generated by view binder compiler. Do not edit!
package com.example.proyecto3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.proyecto3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CategoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button Restaurantes;

  @NonNull
  public final Button button2;

  @NonNull
  public final Button button3;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView tvTitulo;

  private CategoryBinding(@NonNull ConstraintLayout rootView, @NonNull Button Restaurantes,
      @NonNull Button button2, @NonNull Button button3, @NonNull LinearLayout linearLayout,
      @NonNull TextView tvTitulo) {
    this.rootView = rootView;
    this.Restaurantes = Restaurantes;
    this.button2 = button2;
    this.button3 = button3;
    this.linearLayout = linearLayout;
    this.tvTitulo = tvTitulo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Restaurantes;
      Button Restaurantes = rootView.findViewById(id);
      if (Restaurantes == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = rootView.findViewById(id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.button3;
      Button button3 = rootView.findViewById(id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.tv_titulo;
      TextView tvTitulo = rootView.findViewById(id);
      if (tvTitulo == null) {
        break missingId;
      }

      return new CategoryBinding((ConstraintLayout) rootView, Restaurantes, button2, button3,
          linearLayout, tvTitulo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
